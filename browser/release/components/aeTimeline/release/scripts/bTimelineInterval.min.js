function bTimelineIntervalDirective(e){return{require:"^bTimeline",controllerAs:"bTimelineInterval",controller:["$scope",function(){this.$templates={},this.useTemplate=function(e,i){this.$templates[e]=i}}],link:function(i,n){var l='<div class="b-timeline-interval" b-timeline-interval-template-transclude="interval"></div>';n.append(e(l)(i))}}}function bTimelineIntervalTemplateDirective(e){return{restrict:"A",require:"^bTimelineInterval",transclude:"element",link:function(i,n,l,t,r){l.bTimelineIntervalTemplate&&t.useTemplate(l.bTimelineIntervalTemplate,{$e:n,$transclude:r,use:e(l.use)()})}}}function bTimelineIntervalTemplateTranscludeDirective(){return{transclude:!0,link:function(e,i,n){if(e.bTimelineInterval&&n.bTimelineIntervalTemplateTransclude){var l=e.bTimelineInterval.$templates[n.bTimelineIntervalTemplateTransclude];l&&l.$transclude(function(n){var t=n.scope();l.use&&l.use.length&&angular.forEach(l.use,function(i){t[i]=e[i]}),i.append(n)})}}}}angular.module("bTimelineInterval",["bTimeline"]).directive("bTimelineInterval",bTimelineIntervalDirective).directive("bTimelineIntervalTemplate",bTimelineIntervalTemplateDirective).directive("bTimelineIntervalTemplateTransclude",bTimelineIntervalTemplateTranscludeDirective),bTimelineIntervalDirective.$inject=["$compile"],bTimelineIntervalTemplateDirective.$inject=["$parse"];